<?php
/**
 * @file
 * Functional tests for the DNA module.
 */
class DnaTests extends DrupalWebTestCase
{
	public static function getInfo()
	{
		return array(
            'name' => 'DNA Module Tests',
            'description' => 'Test the DNA module.',
            'group' => 'DNA Module Tests',
        );
	}

	public function setUp() {
        parent::setUp(array('dna'));

    }

    public function testDnaNavigation() {
        $this->drupalGet('dna_page');
        $this->assertText('Using only A,C,G,T enter in a DNA sequence.', 'Success dna page works!');
				$info['dna_input'] = "A";
        $this->drupalPost('dna_page', $info, t('Submit'));
        $this->assertText("T", 'The text on the page is correct. Hoorah!');
    }

 }

class DnaTestCase extends DrupalUnitTestCase
{
    public static function getInfo()
    {
        return array(
            'name' => 'Dna function Test',
            'description' => 'Test the DNA functions.',
            'group' => 'DNA Module Tests',
        );
    }

    public function testDnaFormatInput()
    {
    	$description = 'An input should get upper cased and string split.';
        $input = 'a';
        $result = dna_format_input($input);
        $expected_output = array('A');
        $this->assertEqual($result, $expected_output, $description);
    }

    public function testDnaFind()
    {

        $description = 'The input of an A should return T.';
        $input = array('A');
        $result = dna_find($input);
        $expected_output = 'T';
        $this->assertEqual($result, $expected_output, $description);

				$description = 'The input of an T should return A.';
        $input = array('T');
        $result = dna_find($input);
        $expected_output = 'A';
        $this->assertEqual($result, $expected_output, $description);

				$description = 'The input of an C should return G.';
				$input = array('C');
				$result = dna_find($input);
				$expected_output = 'G';
				$this->assertEqual($result, $expected_output, $description);

				$description = 'The input of an G should return C.';
				$input = array('G');
				$result = dna_find($input);
				$expected_output = 'C';
				$this->assertEqual($result, $expected_output, $description);

				$description = 'The input of an ATC should return TAG.';
        $input = array('A', 'T','C' );
        $result = dna_find($input);
        $expected_output = 'TAG';
        $this->assertEqual($result, $expected_output, $description);
    }

}
